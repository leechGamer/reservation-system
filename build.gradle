buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.reservation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def querydslDir = "$buildDir/generated/querydsl"
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'junit:junit:4.13.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor'org.projectlombok:lombok'
	implementation group:'mysql',name:'mysql-connector-java', version:'8.0.29'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.5'
	testImplementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
}

apply plugin: 'com.ewerk.gradle.plugins.querydsl'
def querydslSrcDir = 'src/main/generated'

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}


